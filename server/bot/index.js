const { Telegraf } = require('telegraf');
const { addToWaitlist } = require('../controllers/coursesController');

const bot = new Telegraf(process.env.BOT_TOKEN);

const userData = {};  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ

bot.start((ctx) => {
  ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! –¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫". –≠—Ç–æ—Ç –∫—É—Ä—Å –æ–±...'
    + '\n\n–î–ª—è –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ üòä'
  );
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è üòé');
  userData[ctx.chat.id] = { step: 'name' };
});

bot.on('text', async (ctx) => {
    const chatId = ctx.chat.id;

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
    if (!userData[chatId]) {
        userData[chatId] = { step: 'name' };
    }

    const step = userData[chatId].step;
    const text = ctx.message.text;

    if (step === 'name') {
        userData[chatId].name = text;
        userData[chatId].step = 'surname';
        return ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é üòÉ');
    } else if (step === 'surname') {
        userData[chatId].surname = text;
        userData[chatId].step = 'email';
        return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π email üòâ');
    } else if (step === 'email') {
        userData[chatId].email = text;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        try {
            const response = await addToWaitlist({
                chatId,
                name: userData[chatId].name,
                surname: userData[chatId].surname,
                email: userData[chatId].email,
                courseId: '1'
            });
            ctx.reply(response.message);
        } catch (error) {
            ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–∞–ø–ø–æ—Ä—Ç');
            console.error(error);
        } finally {
            // –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            delete userData[chatId];
        }
    }
});

module.exports = bot;
