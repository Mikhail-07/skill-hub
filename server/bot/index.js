const { Telegraf, Markup } = require("telegraf");
const { addToWaitlist } = require("../controllers/coursesController");

const bot = new Telegraf(process.env.BOT_TOKEN);

const userData = {}; // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! –¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫".' +
      "\n\n–î–ª—è –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ üòä",
    Markup.inlineKeyboard([
      Markup.button.callback("–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", "start_registration"),
    ])
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
bot.action("start_registration", (ctx) => {
  ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è üòé");
  userData[ctx.chat.id] = { step: "name" };
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("text", async (ctx) => {
  const chatId = ctx.chat.id;

  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
  if (!userData[chatId]) {
    userData[chatId] = { step: "name" };
  }

  const step = userData[chatId].step;
  const text = ctx.message.text;

  if (step === "name") {
    userData[chatId].name = text;
    userData[chatId].step = "surname";
    return ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é üòÉ");
  } else if (step === "surname") {
    userData[chatId].surname = text;
    userData[chatId].step = "email";
    return ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π email üòâ");
  } else if (step === "email") {
    userData[chatId].email = text;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    try {
      const response = await addToWaitlist({
        chatId,
        name: userData[chatId].name,
        surname: userData[chatId].surname,
        email: userData[chatId].email,
        courseId: "1",
      });

      ctx.reply(response.message);

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      const reportChatId = 368991424; // ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞
      const userLink = ctx.from.username
        ? `https://t.me/${ctx.from.username}`
        : "–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";

      const reportMessage =
        `–ü—Ä–∏–≤–µ—Ç! üåü\n\n` +
        `üéâ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –∫—É—Ä—Å–∞ "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫"!\n\n` +
        `üìù –ò–º—è: ${userData[chatId].name}\n` +
        `üìù –§–∞–º–∏–ª–∏—è: ${userData[chatId].surname}\n` +
        `üí¨ Telegram: ${userLink}\n\n` +
        (await bot.telegram.sendMessage(reportChatId, reportMessage));
    } catch (error) {
      ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–∞–ø–ø–æ—Ä—Ç"
      );
      console.error(error);
    } finally {
      // –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      delete userData[chatId];
    }
  }
});

module.exports = bot;
